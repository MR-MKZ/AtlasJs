var e=require("fs");function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function r(e,r){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=function(e,r){if(e){if("string"==typeof e)return t(e,r);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(e))||r&&e&&"number"==typeof e.length){n&&(e=n);var o=0;return function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function n(e){return n=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},n(e)}function o(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(o=function(){return!!e})()}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function s(e){var t="function"==typeof Map?new Map:void 0;return s=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf("[native code]")}catch(t){return"function"==typeof e}}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return function(e,t,r){if(o())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,t);var s=new(e.bind.apply(e,n));return r&&i(s,r.prototype),s}(e,arguments,n(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),i(r,e)},s(e)}var u=/*#__PURE__*/function(e){function t(t,r,n,o){var i;return(i=e.call(this,t)||this).name="AtlasError -> "+r,n&&(i.tips=n),o&&(i.data=o),i}var r,n;return n=e,(r=t).prototype=Object.create(n.prototype),r.prototype.constructor=r,i(r,n),t}(/*#__PURE__*/s(Error));function a(e,t,r,n){throw new u(e,t,r,n)}var c=new(/*#__PURE__*/function(){function t(){}var n=t.prototype;return n.getRegions=function(){try{return Promise.resolve(e.promises.readFile("./assets/regions.json","utf8")).then(JSON.parse)}catch(e){return Promise.reject(e)}},n.getRegionByName=function(t){try{return Promise.resolve(function(){if(isNaN(Number(t)))return Promise.resolve(e.promises.readFile("./assets/regions.json","utf8")).then(function(e){for(var n,o=r(JSON.parse(e));!(n=o()).done;){var i=n.value;if(i.name.toLowerCase()===t.toLowerCase())return i}a("region "+t+" not found","RESULT_NOT_FOUND")});a("region name must be string","INPUT_TYPE_ERR")}())}catch(e){return Promise.reject(e)}},n.getSubRegion=function(t){try{var n=[];return Promise.resolve(e.promises.readFile("./assets/subregions.json","utf8")).then(function(e){for(var o,i=r(JSON.parse(e));!(o=i()).done;){var s=o.value;s.region_id==t&&n.push(s)}if(0!==n.length)return n;a("Subregion with region id "+t+" not found","RESULT_NOT_FOUND")})}catch(e){return Promise.reject(e)}},n.getCountries=function(t,n,o,i,s,u,a,c,l,f,m){try{var d=[];return Promise.resolve(e.promises.readFile("./assets/countries_states_cities.json","utf8")).then(function(e){for(var v,g=r(JSON.parse(e));!(v=g()).done;){var p=v.value,y={};y.id=p.id,y.name=p.name,y.iso2=p.iso2,y.iso3=p.iso3,y.capital=p.capital,n&&(y.phone_code=p.phone_code),t&&(y.currency=p.currency,y.currency_name=p.currency_name,y.currency_symbol=p.currency_symbol),m&&(y.domain=p.tld),o&&(y.native=p.native),i&&(y.nationality=p.nationality),s&&(y.region=p.region,y.region_id=p.region_id),u&&(y.subregion=p.subregion,y.subregion_id=p.subregion_id),a&&(y.translations=p.translations),c&&(y.timezones=p.timezones),l&&(y.latitude=p.latitude,y.longitude=p.longitude),f&&(y.emoji=p.emoji,y.emojiU=p.emojiU),d.push(y)}return d})}catch(e){return Promise.reject(e)}},n.getStates=function(t,n,o,i){try{return Promise.resolve(function(){if(void 0!==t&&null!=t&&isNaN(Number(t))||void 0!==n&&isNaN(Number(n))||void 0!==o&&isNaN(Number(o))){var s=[];return Promise.resolve(e.promises.readFile("./assets/countries_states_cities.json","utf8")).then(function(e){for(var u,c=r(JSON.parse(e));!(u=c()).done;){var l=u.value;if(void 0!==t&&null!=t&&l.name.toLowerCase()===t.toLowerCase()||void 0!==n&&l.iso3.toLowerCase()===n.toLowerCase()||void 0!==o&&l.iso2.toLowerCase()===o.toLowerCase())for(var f,m=r(l.states);!(f=m()).done;){var d=f.value,v={};v.id=d.id,v.name=d.name,v.state_code=d.state_code,i&&(v.latitude=d.latitude,v.longitude=d.longitude),s.push(v)}}if(0!==s.length)return s;a("Country "+t+" not found","RESULT_NOT_FOUND",{country_name:"check entered country name: "+t,iso3:"check entered iso3: "+n,iso2:"check entered iso2: "+o})})}a("region name must be string","INPUT_TYPE_ERR")}())}catch(e){return Promise.reject(e)}},n.getCities=function(t,n,o){try{var i=[];return Promise.resolve(function(){if(isNaN(Number(t))&&isNaN(Number(n)))return Promise.resolve(e.promises.readFile("./assets/countries_states_cities.json","utf8")).then(function(e){for(var s,u=!1,c=!1,l=r(JSON.parse(e));!(s=l()).done;){var f=s.value;if(f.name.toLowerCase()===t.toLowerCase()){u=!0;for(var m,d=r(f.states);!(m=d()).done;){var v=m.value;if(v.name.toLowerCase()===n.toLowerCase()){c=!0;for(var g,p=r(v.cities);!(g=p()).done;){var y=g.value,_={};_.id=y.id,_.name=y.name,o&&(_.latitude=y.latitude,_.longitude=y.longitude),i.push(_)}}}}}if(i.length>0)return i;u?c?a("There is no city for "+t+","+n,"RESULT_NOT_FOUND"):a("State "+n+" not found","RESULT_NOT_FOUND",{state:"check entered state name: "+n}):a("Country "+t+" not found","RESULT_NOT_FOUND",{country:"check entered country name: "+t})});a("country name and state name must be string","INPUT_TYPE_ERR")}())}catch(e){return Promise.reject(e)}},t}());exports.getAllCountries=function(e,t,r,n,o,i,s,u,a,l,f){try{return Promise.resolve(c.getCountries(e,t,r,n,o,i,s,u,a,l,f))}catch(e){return Promise.reject(e)}},exports.getAllRegions=function(){try{return Promise.resolve(c.getRegions())}catch(e){return Promise.reject(e)}},exports.getCountryStates=function(e,t,r,n){try{return Promise.resolve(function(){if(e&&""!==e||t&&""!==t||r&&""!==r)return null!=e&&null!=e&&(e=e.toString()),null!=t&&void 0!==t&&(t=t.toString()),null!=r&&null!=r&&(r=r.toString()),Promise.resolve(c.getStates(e,t,r,n));a("country name, iso3 or iso2 is missing, at least one of them is required!","MISSING_REQUIRED_VALUE")}())}catch(e){return Promise.reject(e)}},exports.getStateCities=function(e,t,r){try{return Promise.resolve(function(){if(e&&void 0!==e&&""!==e)return function(){if(t&&void 0!==t&&""!==t)return isNaN(e)||(e=e.toString()),isNaN(t)||(t=t.toString()),Promise.resolve(c.getCities(e,t,r));a("state name is required!","MISSING_REQUIRED_VALUE")}();a("country name is required!","MISSING_REQUIRED_VALUE")}())}catch(e){return Promise.reject(e)}},exports.getSubRegions=function(e){try{return Promise.resolve(function(){if(e&&void 0!==e&&""!==e)return Promise.resolve(c.getRegionByName(e)).then(function(e){return function(){if(void 0!==e)return Promise.resolve(c.getSubRegion(e.id))}()});a("region name is required!","MISSING_REQUIRED_VALUE")}())}catch(e){return Promise.reject(e)}};
//# sourceMappingURL=index.cjs.map
