{"version":3,"file":"index.cjs","sources":["../src/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n/**\r\n * This function fetches data from an API and returns an array of countries.\r\n *\r\n * @param {boolean} flag - Need flag of country or not.\r\n * @param {boolean} currency - Need currency of country or not.\r\n * @param {boolean} dialCode - Need dial code of country or not.\r\n * @returns {Promise<Object>} A Promise that resolves to an array of countries fetched from the API.\r\n */\r\nexport function getAllCountries(flag, currency, dialCode) {\r\n  const moreInfo = [];\r\n  const countries = [];\r\n\r\n  flag && moreInfo.push(\"flag\");\r\n  currency && moreInfo.push(\"currency\");\r\n  dialCode && moreInfo.push(\"dialCode\");\r\n\r\n  let url =\r\n    moreInfo.length > 0\r\n      ? `https://countriesnow.space/api/v0.1/countries/info?returns=${moreInfo.join(\r\n          \",\"\r\n        )}`\r\n      : \"https://countriesnow.space/api/v0.1/countries/positions\";\r\n\r\n  let config = {\r\n    method: \"get\",\r\n    maxBodyLength: Infinity,\r\n    url: url,\r\n    headers: {},\r\n  };\r\n\r\n  return axios\r\n    .request(config)\r\n    .then((response) => {\r\n      if (moreInfo.length == 0) {\r\n        for (let country of response.data.data) {\r\n          countries.push(country[\"name\"]);\r\n        }\r\n        return countries;\r\n      } else {\r\n        return response.data.data;\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      return [error];\r\n    });\r\n}"],"names":["flag","currency","dialCode","moreInfo","countries","push","url","length","join","axios","request","method","maxBodyLength","Infinity","headers","then","response","_step","_iterator","_createForOfIteratorHelperLoose","data","done","value","error"],"mappings":"sPAUgCA,EAAMC,EAAUC,GAC9C,IAAMC,EAAW,GACXC,EAAY,GAElBJ,GAAQG,EAASE,KAAK,QACtBJ,GAAYE,EAASE,KAAK,YAC1BH,GAAYC,EAASE,KAAK,YAE1B,IAAIC,EACFH,EAASI,OAAS,gEACgDJ,EAASK,KACrE,KAEF,0DASN,OAAOC,EAAAA,QACJC,QARU,CACXC,OAAQ,MACRC,cAAeC,SACfP,IAAKA,EACLQ,QAAS,CACX,IAIGC,KAAK,SAACC,GACL,GAAuB,GAAnBb,EAASI,OAAa,CACxB,QAAsCU,EAAtCC,6pBAAAC,CAAoBH,EAASI,KAAKA,QAAIH,EAAAC,KAAAG,MACpCjB,EAAUC,KADIY,EAAAK,MACe,MAE/B,OAAOlB,CACT,CACE,OAAOY,EAASI,KAAKA,IAEzB,GAAE,MACK,SAACG,GACN,MAAO,CAACA,EACV,EACJ"}